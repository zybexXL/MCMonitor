# MCMonitor config file
# Defines actions to perform for each MC Event received

# set to 1 to enable debug log file
debug = 1

# events to process - clear or comment out to process all events
#filter = NOTIFY_TRACK_CHANGE|NOTIFY_PLAYERSTATE_CHANGE
filter =

# fields to include in the Json/Websocket outputs - clear or comment out to include ALL fields (NOT recommended)
# optional [brackets] can be used (mandatory only when the field name includes a comma)
fields = Name,Artist,Album,Year,[Track #]

# Log events to a text file - clear or comment out Log.path to disable
# Set log.line to the desired format using the variables listed above
# Available variables are listed below
# Filter does NOT apply, ALL events will be logged
log.path = MCEvents.log
log.line = $time seq=$sequence type=$type arg1=$arg1 arg2=$arg2 state=$state current=$currkey next=$nextkey

# Write events to a JSON file - clear or comment out Json.path to disable
# Each new event overwrites the file.
# Set json.count to the number of past events to write.
# Set json.details = 1 to include field data for current and next file
json.path = MCEvents.json
json.count = 1
json.details = 1

# Send to WebSocket - clear or comment out Websocket.Port to disable
# set websocket.details = 1 to include field data for current and next file
websocket.port = 52166
websocket.details = 1

# Execute command(s). Multiple Execute= lines can be added to be executed sequentially
# Execute.maxWait sets the *maximum* time to wait for a command to complete before advancing to the next command
# Execute.minWait sets the *minimum* time to wait before executing the next command
# Available variables for command line args are listed below
execute.maxwait = 1
execute.minwait = 0.25
execute = cmd.exe /c echo $time $arg1 state=$state current=$currkey next=$nextkey json=$json >> MCMonitor_execute_test.txt
#execute = python.exe mcInfo.py $json

# Execution notes:
# - Commands for multiple events are queued and executed in order
# - If a command does not exit within MaxWait seconds the next command is executed regardless
# - Queued commands will execute with at least MaxWait seconds delay/interval
# - Set MaxWait=0 to proceed immediately to the next command without waiting (default = 1)
# - Set MinWait=0 to add no delay between executed commands (default = 0)
# - MaxWait and MinWait accept decimal values like 0.25

# These variables are available as parameters for Execute and Log.Line settings:
#   $time - event timestamp
#   $count - event counter
#   $source - event source
#   $type - event type
#   $arg1 - first MCC event paramenter (event name)
#   $arg2 - second MCC event paramenter
#   $[field] - field value for current file - ex: $[Artist]
#   $$[field] - field value for next file - ex: $$[Artist]
#   $i[property] - property value of /Playback/Info call - ex: $i[Bitrate]
#   $currkey - filekey of current file, same as $i[FileKey]
#   $nextkey - filekey of next file, same as $i[NextFileKey]
#   $state - current State from /playback/info
#   $json - path to a temporary JSON file with event and current/next file data.
#           This file is automatically deleted a few seconds after execution.
#           Each event creates a file with a different filename in the %TEMP% folder.

# set the delay before deleting the temporary $json files, in seconds. Default is 10 seconds
DeleteDelay = 10

# set to 0 to disable tray notification
TrayNotification = 1